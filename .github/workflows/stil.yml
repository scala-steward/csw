name: stil

on:
  schedule:
    - cron: "30 18 * * *" # run at 00:00 AM IST

jobs:
  unit-tests:
    runs-on: [self-hosted, stil_runner]

    steps:
      - uses: actions/checkout@v2
      - run: sudo chmod 666 /var/run/docker.sock

      - name: Build
        run: |
          sbt clean scalafmtCheck scalastyle
          sbt makeSite
          sbt ';set every Seq(enableFatalWarnings := true, scalafmtOnCompile := false); test:compile; multi-jvm:compile;'

      - name: Tests
        run: |
          sbt -DenableCoverage=true -DgenerateStoryReport=true ';set every enableFatalWarnings := true; csw-time/test:test'
          sbt -DenableCoverage=true -DgenerateStoryReport=true -DdisableTimeTests ';set every enableFatalWarnings := true; test:test'

      - name: Multi-Jvm Tests
        run: sbt -DgenerateStoryReport=true ';set every enableFatalWarnings := true; integration/multi-jvm:test'

      - name: Generate RTM
        run: |
          ./scripts/coursier launch --channel https://raw.githubusercontent.com/tmtsoftware/apps/master/apps.json rtm:d1c8c7e -- target/RTM/testStoryMapping.txt tools/RTM/cswStoryToRequirementMap.csv target/RTM/testRequirementsMapping.txt

      - name: Coverage Report
        run: |
          sbt -DenableCoverage=true coverageReport
          sbt coverageAggregate

      - uses: actions/upload-artifact@v1
        with:
          name: Coverage Report
          path: target/scala-2.13/scoverage-report

      - name: Upload RTM
        uses: actions/upload-artifact@v1
        with:
          name: RTM
          path: target/RTM

      - name: Package
        run: ./integration/scripts/package_integration.sh

      - name: Multi-NICs Docker
        run: ./integration/scripts/multiple_nic_test.sh

      - name: Paradox Validate Links
        run: sbt docs/Paradox/paradoxValidateLinks

  slack-success:
    needs: [unit-tests]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: kpritam/slack-job-status-action@v1
        with:
          job-status: Success
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-nightly

  slack-failure:
    needs: [unit-tests]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - uses: kpritam/slack-job-status-action@v1
        with:
          job-status: Failure
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-nightly

  slack-cancelled:
    needs: [unit-tests]
    if: cancelled()
    runs-on: ubuntu-latest
    steps:
      - uses: kpritam/slack-job-status-action@v1
        with:
          job-status: Cancelled
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-nightly
