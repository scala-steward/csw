akka {
  loggers = [csw.logging.client.compat.AkkaLogger]
  loglevel = warning
  actor {
    debug {
      lifecycle = off
    }
  }
}

logging-dispatcher {
  mailbox-requirement =
    "akka.dispatch.BoundedMessageQueueSemantics"
}

akka.actor.mailbox.requirements {
  "akka.dispatch.BoundedMessageQueueSemantics" = bounded-mailbox
}

bounded-mailbox {
  mailbox-type = "akka.dispatch.BoundedMailbox"
  mailbox-capacity = 262144
  mailbox-push-timeout-time = 0
}

#default-logging-conf
csw-logging {

  # Default appender and is recommended only for dev setup.
  # To use multiple appenders give comma separated list of appenders.
  appenders = ["csw.logging.client.appenders.StdOutAppender$"]

  # Recommended for production setup - Uncomment below line and comment above to enable FileAppender
  #appenders = ["csw.logging.client.appenders.FileAppender$"]

  component-log-levels {
    # By default each compoent will use log level specified by `csw-logging.logLevel`. If required, this block allows
    # overriding log level configuration for one/more components.
    # -- Example --
    # tcs.filter = debug
    # nfiraos {
    #      tromboneassembly = error
    #      trombonehcd = info
    #  }
    #
  }

  appender-config {
    file {
      # Include standard headers
      fullHeaders = true
      # Sort the fields in Json objects
      sorted = true
      # Base path directory to hold log files from tmt apps. The value is picked from env var `TMT_LOG_HOME`. It is necessary
      # to have `TMT_LOG_HOME` set as env var otherwise an exception will be thrown when FileAppender gets initialized.
      baseLogPath = ${?TMT_LOG_HOME}
      # Directory to hold log files under base path $TMT_LOG_HOME i.e. basePath/logPath
      logPath = ""
      # Common log messages below this level are removed, none removed when set to trace
      logLevelLimit = trace
      # Flag to turn file rotation ON or OFF. Currently log file is rotated daily at 12:00 pm UTC time. By turning this flag off
      # file rotation will not happen.
      rotate = true
    }
    stdout {
      # Include standard headers
      fullHeaders = false
      # Use colors for log levels
      color = true
      # The maximum number of character that should be on a line
      # This is only a goal; in practice some may contain more characters.
      width = 80
      # Print summary counts when logger is closed
      summary = true
      # pretty output - multiple line json
      pretty = false
      # Messages below this level are removed, none removed when set to trace
      logLevelLimit = trace
      # false Json output; true simple one line text output
      oneLine = true
    }
  }
  # If component does not specify their log level in component-log-levels block,
  # Then this will be considered as default log level for that component.
  logLevel = info
  # Log level for slf4j messages
  slf4jLogLevel = info
  # Log level for Akka messages
  akkaLogLevel = warn
  # Enable timing logging
  time = false
  # Enable garbage collection logging
  gc = false
}
#default-logging-conf
